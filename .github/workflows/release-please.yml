name: Release Please Action

on:
  workflow_call:
    inputs:
      target-branch:
        description: "Optional branch to target for release"
        required: false
        type: string
        default: "dev"
      default-branch:
        description: "Optional default branch to target for release"
        required: false
        type: string
        default: "main"
      config-file:
        description: "Optional path to the release-please configuration file"
        required: false
        type: string
        default: "release-please-config.json"
      manifest-file:
        description: "Optional path to the release-please manifest file"
        required: false
        type: string
        default: ".release-please-manifest.json"
      runs-on:
        description: "Optional label for the runner to run on"
        required: false
        type: string
        default: "['self-hosted', 'Linux', 'X64']"
      use-root-gitflow:
        description: "Optional flag to enable gitflow release for root component"
        required: false
        type: boolean
        default: true
      use-docs-gitflow:
        description: "Optional flag to enable gitflow release for docs component"
        required: false
        type: boolean
        default: true
      committer-email:
        description: "Optional committer email"
        required: false
        type: string
        default: "47529956+alwyn974@users.noreply.github.com"
      committer-name:
        description: "Optional committer name"
        required: false
        type: string
        default: "alwyn974"
      node-version:
        description: "Optional node version for docs component"
        required: false
        type: string
        default: "20.x"
    secrets:
      APP_ID:
        description: "GitHub App ID"
        required: true
      APP_PRIVATE_KEY:
        description: "GitHub App Private Key"
        required: true
    outputs:
      outputs:
        description: "All outputs from the release-please action as JSON"
        value: ${{ jobs.release-please.outputs.outputs }}
      # https://github.com/googleapis/release-please-action?tab=readme-ov-file#outputs
      releases_created:
        description: "Boolean indicating if releases were created"
        value: ${{ jobs.release-please.outputs.releases_created }}
      paths_released:
        description: "A JSON string of the array of paths that had releases created ([] if )"
        value: ${{ jobs.release-please.outputs.paths_released }}
      prs_created:
        description: "Boolean if any pull request was created or updated"
        value: ${{ jobs.release-please.outputs.prs_created }}
      pr:
        description: "A JSON string of the PullRequest object (unset if no release created) https://github.com/googleapis/release-please/blob/main/src/pull-request.ts#L15"
        value: ${{ jobs.release-please.outputs.pr }}
      prs:
        description: "A JSON string of the array of PullRequest objects (unset if no release created) https://github.com/googleapis/release-please/blob/main/src/pull-request.ts#L15"
        value: ${{ jobs.release-please.outputs.prs }}
      # https://github.com/googleapis/release-please-action?tab=readme-ov-file#root-component-outputs
      release_created:
        description: "Boolean if a root component release was created, false otherwise"
        value: ${{ jobs.release-please.outputs.release_created }}
      upload_url:
        description: "Directly related to Create a release API https://developer.github.com/v3/repos/releases/#response-4"
        value: ${{ jobs.release-please.outputs.upload_url }}
      html_url:
        description: "Directly related to Create a release API https://developer.github.com/v3/repos/releases/#response-4"
        value: ${{ jobs.release-please.outputs.html_url }}
      tag_name:
        description: "Directly related to Create a release API https://developer.github.com/v3/repos/releases/#response-4"
        value: ${{ jobs.release-please.outputs.tag_name }}
      version:
        description: "Version number (major.minor.patch) of the release created"
        value: ${{ jobs.release-please.outputs.version }}
      major:
        description: "Major version number"
        value: ${{ jobs.release-please.outputs.major }}
      minor:
        description: "Minor version number"
        value: ${{ jobs.release-please.outputs.minor }}
      patch:
        description: "Patch version number"
        value: ${{ jobs.release-please.outputs.patch }}
      sha:
        description: "SHA of the commit that was released"
        value: ${{ jobs.release-please.outputs.sha }}

jobs:
  release-please:
    name: Run Release Please
    permissions:
      contents: write # to create release commit (google-github-actions/release-please-action)
      pull-requests: write # to create release PR (google-github-actions/release-please-action)
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    outputs:
      outputs: ${{ toJson(steps.release-please.outputs) }}
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      paths_released: ${{ steps.release-please.outputs.paths_released }}
      prs_created: ${{ steps.release-please.outputs.prs_created }}
      pr: ${{ steps.release-please.outputs.pr }}
      prs: ${{ steps.release-please.outputs.prs }}
      # only with root component "."
      release_created: ${{ steps.release-please.outputs.release_created }}
      upload_url: ${{ steps.release-please.outputs.upload_url }}
      html_url: ${{ steps.release-please.outputs.html_url }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
      # Doesn't exist in docs ? But works
      version: ${{ steps.release-please.outputs.version }}
      major: ${{ steps.release-please.outputs.major }}
      minor: ${{ steps.release-please.outputs.minor }}
      patch: ${{ steps.release-please.outputs.patch }}
      sha: ${{ steps.release-please.outputs.sha }}
    steps:
      - name: Generate token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # ratchet:tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Release Please
        uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4
        id: release-please
        with:
          token: ${{ steps.generate-token.outputs.token }}
          config-file: ${{ inputs.config-file }}
          manifest-file: ${{ inputs.manifest-file }}
          target-branch: ${{ inputs.target-branch }}

  root-gitflow-release:
    name: Gitflow release - Root
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'true' && inputs.use-root-gitflow == true }}
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    permissions:
      contents: write
    steps:
      - name: Generate token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # ratchet:tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}

      - name: Release root component
        env:
          release_version: ${{ needs.release-please.outputs.tag_name }}
          version: ${{ needs.release-please.outputs.version }}
          NEXT_BRANCH: ${{ inputs.target-branch }}
          DEFAULT_BRANCH: ${{ inputs.default-branch }}
        run: |
          git config --global user.name ${{ inputs.committer-name }}
          git config --global user.email ${{ inputs.committer-email }}

          # Create new release branch (e.g release/docs-v1.0.0, release/v1.0.0) from NEXT_BRANCH (e.g dev)
          git checkout -b release/${{ env.release_version }} ${{ env.NEXT_BRANCH }}

          # Merge release branch into the default branch (e.g main)
          git checkout ${{ env.DEFAULT_BRANCH }}
          git merge --no-ff release/${{ env.release_version }}

          # git tag --delete ${{ env.release_version }} # remove release please tag
          # git tag -a ${{ env.release_version }} -m "Tagging version ${{ env.release_version }}" # create new tag on default branch

          git checkout ${{ env.NEXT_BRANCH }}
          git merge --no-ff ${{ env.release_version }}
          git branch -d release/${{ env.release_version }}

          git merge --no-ff ${{ env.DEFAULT_BRANCH }} # merge main into dev

          git push --all && git push --tags

  docs-gitflow-release:
    name: Gitflow release - Docs
    needs: release-please
    if: ${{ fromJSON(needs.release-please.outputs.outputs)['docs--release_created'] == 'true' && inputs.use-docs-gitflow == true }}
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    permissions:
      contents: write
    env:
      # For writing shorter lines
      outputs: ${{ needs.release-please.outputs.outputs }}
      node-version: ${{ inputs.node-version }}
    steps:
      - name: Generate token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # ratchet:tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          run_install: false

      - name: Setup Node.js ${{ env.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ env.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        working-directory: docs
        run: |
          pnpm install

      - name: Release - Docs component
        env:
          release_version: ${{ fromJSON(env.outputs)['docs--tag_name'] }}
          version: ${{ fromJSON(env.outputs)['docs--version'] }}
          NEXT_BRANCH: ${{ inputs.target-branch }}
          DEFAULT_BRANCH: ${{ inputs.default-branch }}
        run: |
          git config --global user.name ${{ inputs.committer-name }}
          git config --global user.email ${{ inputs.committer-email }}

          git checkout -b release/${{ env.release_version }} ${{ env.NEXT_BRANCH }}
          cd docs && pnpm docusaurus docs:version v${{ env.version }} && cd ..
          git add docs
          git commit -m "docs(release): 🚀 Release docs version ${{ env.release_version }}"

          git checkout ${{ env.DEFAULT_BRANCH }}
          git merge --no-ff release/${{ env.release_version }}

          git checkout ${{ env.NEXT_BRANCH }}
          # git merge --no-ff ${{ env.release_version }}
          git branch -d release/${{ env.release_version }}

          git merge --no-ff ${{ env.DEFAULT_BRANCH }} # merge main into dev

          git push --all && git push --tags
